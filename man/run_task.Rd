% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_task.R
\name{run_task}
\alias{run_task}
\title{Run the task defined in a conf file}
\usage{
run_task(conf_path, ignore_status = FALSE)
}
\arguments{
\item{conf_path}{\code{character}. Path to the conf file.}

\item{ignore_status}{\code{logical} (FALSE). Whether or not to launch a task if its status is not "waiting".}
}
\value{
the result of the task (function applied on prepared args).
}
\description{
Run the task defined in a conf file
}
\examples{
\donttest{\dontrun{

# create temporary directory for conf
dir_conf <- paste0(tempdir(), "/conf")
dir.create(dir_conf, recursive = T)

# create temporary directory for fun
dir_fun <- paste0(tempdir(), "/fun")
dir.create(dir_fun)
con <- file(paste0(dir_fun, "/fun_script.R"))
writeLines("my_fun <- function(x, y, z) {
                        res <- x + y ;
                        warning('Just a warning') ;
                        res} ",
           con)
close(con)

# create and save conf
conf <- configure_task(dir_path = dir_conf,
                       conf_descr = list(title = "my_title",
                                         description = "my_descr"),
                       fun_path = paste0(dir_fun, "/fun_script.R"),
                       fun_name = "my_fun",
                       fun_args = list(x = 1,
                                       y = 0:4,
                                       z = iris),
                       priority = 1)

conf_init <- yaml::read_yaml(paste0(conf$dir, "conf.yml"))
y <- readRDS(paste0(conf$dir, "inputs/y.RDS"))
z <- readRDS(paste0(conf$dir, "inputs/z.RDS"))

run_task(paste0(conf$dir, "conf.yml"))

# catch results
list.files(conf$dir)
conf_update <- yaml::read_yaml(paste0(conf$dir, "conf.yml"))
output <- readRDS(paste0(conf$dir, "output/res.RDS"))
log <- read.table(paste0(conf$dir, "output/log_run.txt"), header = F)

}}
}
