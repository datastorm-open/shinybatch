% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/launcher.R
\name{launcher}
\alias{launcher}
\title{Evaluates and triggers the number of tasks to launch to reach the maximum allowed}
\usage{
launcher(dir_path, max_runs = 1, memory_size = NULL)
}
\arguments{
\item{dir_path}{\code{character}. Where to find the tasks directory.}

\item{max_runs}{\code{integer}. Maximum number of simultaneous running tasks.}

\item{memory_size}{\code{integer}. Maximum memory size allowed for the runs.}
}
\value{
the number of launched tasks.
}
\description{
Evaluates and triggers the number of tasks to launch to reach the maximum allowed
}
\examples{
\donttest{\dontrun{

# create temporary directory for conf
dir_conf <- paste0(tempdir(), "/conf")
dir.create(dir_conf, recursive = T)

# create temporary directory for fun
dir_fun <- paste0(tempdir(), "/fun")
dir.create(dir_fun)
con <- file(paste0(dir_fun, "/fun_script.R"))
writeLines("my_fun <- function(x, y, z) {x + y}",
           con)
close(con)

# create 2 confs
conf_1 <- configure_task(dir_path = dir_conf,
                         conf_descr = list(title_1 = "my_title_1",
                                           description_1 = "my_descr_1"),
                         fun_path = paste0(dir_fun, "/fun_script.R"),
                         fun_name = "my_fun",
                         fun_args = list(x = 0,
                                         y = 0:4,
                                         z = iris),
                         priority = 1)
conf_2 <- configure_task(dir_path = dir_conf,
                         conf_descr = list(title_2 = "my_title_2",
                                           description_2 = "my_descr_2"),
                         fun_path = paste0(dir_fun, "/fun_script.R"),
                         fun_name = "my_fun",
                         fun_args = list(x = 1,
                                         y = 0:4,
                                         z = iris),
                         priority = 2)

launcher(dir_conf)
# display res of conf_2 in /output dir
readRDS(paste0(conf_2$path, "output/res.RDS"))

launcher(dir_conf)
# display res of conf_1 in /output dir
readRDS(paste0(conf_1$path, "output/res.RDS"))

launcher(dir_conf) 

}}
}
